function(x) {
        let y = 0;
    }
----------
Pair { rule: InputElementDiv, span: Span { start: 0, end: 38 }, inner: Pairs { pairs: [Pair { rule: Token, span: Span { start: 0, end: 38 }, inner: Pairs { pairs: [Pair { rule: IdentifierName, span: Span { start: 0, end: 38 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [] } }] } }] } }] } }] } }] } }] } }
    function(x) {
        let y = 0;
    }
    ----------
    Pair { rule: Token, span: Span { start: 0, end: 38 }, inner: Pairs { pairs: [Pair { rule: IdentifierName, span: Span { start: 0, end: 38 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [] } }] } }] } }] } }] } }] } }
        function(x) {
        let y = 0;
    }
        ----------
        Pair { rule: IdentifierName, span: Span { start: 0, end: 38 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [] } }] } }] } }] } }, Pair { rule: IdentifierPart, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [] } }] } }] } }] } }] } }
            f
            ----------
            Pair { rule: IdentifierStart, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [] } }] } }] } }
                f
                ----------
                Pair { rule: UnicodeLetter, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [] } }] } }
                    f
                    ----------
                    Pair { rule: SourceCharacter, span: Span { start: 0, end: 1 }, inner: Pairs { pairs: [] } }
            u
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                u
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [] } }] } }] } }
                    u
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [] } }] } }
                        u
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 1, end: 2 }, inner: Pairs { pairs: [] } }
            n
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                n
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [] } }] } }] } }
                    n
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [] } }] } }
                        n
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 2, end: 3 }, inner: Pairs { pairs: [] } }
            c
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                c
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [] } }] } }] } }
                    c
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [] } }] } }
                        c
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 3, end: 4 }, inner: Pairs { pairs: [] } }
            t
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                t
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [] } }] } }] } }
                    t
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [] } }] } }
                        t
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 4, end: 5 }, inner: Pairs { pairs: [] } }
            i
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                i
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [] } }] } }] } }
                    i
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [] } }] } }
                        i
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 5, end: 6 }, inner: Pairs { pairs: [] } }
            o
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                o
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [] } }] } }] } }
                    o
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [] } }] } }
                        o
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 6, end: 7 }, inner: Pairs { pairs: [] } }
            n
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                n
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [] } }] } }] } }
                    n
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [] } }] } }
                        n
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 7, end: 8 }, inner: Pairs { pairs: [] } }
            (
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                (
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [] } }] } }] } }
                    (
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [] } }] } }
                        (
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 8, end: 9 }, inner: Pairs { pairs: [] } }
            x
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                x
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [] } }] } }] } }
                    x
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [] } }] } }
                        x
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 9, end: 10 }, inner: Pairs { pairs: [] } }
            )
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                )
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [] } }] } }] } }
                    )
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [] } }] } }
                        )
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 10, end: 11 }, inner: Pairs { pairs: [] } }
            {
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                {
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [] } }] } }] } }
                    {
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [] } }] } }
                        {
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 12, end: 13 }, inner: Pairs { pairs: [] } }
            

            ----------
            Pair { rule: IdentifierPart, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                

                ----------
                Pair { rule: IdentifierStart, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [] } }] } }] } }
                    

                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [] } }] } }
                        

                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 13, end: 14 }, inner: Pairs { pairs: [] } }
            l
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                l
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [] } }] } }] } }
                    l
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [] } }] } }
                        l
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 22, end: 23 }, inner: Pairs { pairs: [] } }
            e
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                e
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [] } }] } }] } }
                    e
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [] } }] } }
                        e
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 23, end: 24 }, inner: Pairs { pairs: [] } }
            t
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                t
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [] } }] } }] } }
                    t
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [] } }] } }
                        t
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 24, end: 25 }, inner: Pairs { pairs: [] } }
            y
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                y
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [] } }] } }] } }
                    y
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [] } }] } }
                        y
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 26, end: 27 }, inner: Pairs { pairs: [] } }
            =
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                =
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [] } }] } }] } }
                    =
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [] } }] } }
                        =
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 28, end: 29 }, inner: Pairs { pairs: [] } }
            0
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                0
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [] } }] } }] } }
                    0
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [] } }] } }
                        0
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 30, end: 31 }, inner: Pairs { pairs: [] } }
            ;
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                ;
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [] } }] } }] } }
                    ;
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [] } }] } }
                        ;
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 31, end: 32 }, inner: Pairs { pairs: [] } }
            

            ----------
            Pair { rule: IdentifierPart, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                

                ----------
                Pair { rule: IdentifierStart, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [] } }] } }] } }
                    

                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [] } }] } }
                        

                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 32, end: 33 }, inner: Pairs { pairs: [] } }
            }
            ----------
            Pair { rule: IdentifierPart, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: IdentifierStart, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [] } }] } }] } }] } }
                }
                ----------
                Pair { rule: IdentifierStart, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: UnicodeLetter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [] } }] } }] } }
                    }
                    ----------
                    Pair { rule: UnicodeLetter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [Pair { rule: SourceCharacter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [] } }] } }
                        }
                        ----------
                        Pair { rule: SourceCharacter, span: Span { start: 37, end: 38 }, inner: Pairs { pairs: [] } }
